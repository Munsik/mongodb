{"ast":null,"code":"var _jsxFileName = \"/Users/munsik/Documents/project/movie/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [searchType, setSearchType] = useState(\"lexical\");\n  const [results, setResults] = useState(null);\n  const handleSearch = async () => {\n    const response = await fetch(\"http://localhost:3000/search\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query,\n        type: searchType\n      })\n    });\n    const data = await response.json();\n    setResults(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for movies...\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"lexical\",\n          checked: searchType === \"lexical\",\n          onChange: () => setSearchType(\"lexical\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), \"Lexical Search\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"hybrid\",\n          checked: searchType === \"hybrid\",\n          onChange: () => setSearchType(\"hybrid\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), \"Hybrid Search\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"rag\",\n          checked: searchType === \"rag\",\n          onChange: () => setSearchType(\"rag\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), \"RAG Search\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Results (\", results.totalResults, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: results.data.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: movie.title\n        }, movie._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"U3Yv5S3fYK9eResZWEKRvPxGGfw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","query","setQuery","searchType","setSearchType","results","setResults","handleSearch","response","fetch","method","headers","body","JSON","stringify","type","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","checked","onClick","totalResults","map","movie","title","_id","_c","$RefreshReg$"],"sources":["/Users/munsik/Documents/project/movie/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [searchType, setSearchType] = useState(\"lexical\");\n  const [results, setResults] = useState(null);\n\n  const handleSearch = async () => {\n    const response = await fetch(\"http://localhost:3000/search\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query, type: searchType }),\n    });\n    const data = await response.json();\n    setResults(data);\n  };\n\n  return (\n    <div>\n      <h1>Movie Search</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Search for movies...\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n      <div>\n        <label>\n          <input\n            type=\"radio\"\n            value=\"lexical\"\n            checked={searchType === \"lexical\"}\n            onChange={() => setSearchType(\"lexical\")}\n          />\n          Lexical Search\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            value=\"hybrid\"\n            checked={searchType === \"hybrid\"}\n            onChange={() => setSearchType(\"hybrid\")}\n          />\n          Hybrid Search\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            value=\"rag\"\n            checked={searchType === \"rag\"}\n            onChange={() => setSearchType(\"rag\")}\n          />\n          RAG Search\n        </label>\n      </div>\n      <button onClick={handleSearch}>Search</button>\n\n      {results && (\n        <div>\n          <h2>Results ({results.totalResults})</h2>\n          <ul>\n            {results.data.map((movie) => (\n              <li key={movie._id}>{movie.title}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}